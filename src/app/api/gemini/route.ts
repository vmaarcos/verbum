import { NextRequest, NextResponse } from 'next/server'

export async function POST(req: NextRequest) {
  const body = await req.json()
  const prompt = body.prompt

const theologicalPrompt = `Voc√™ √© Verbum, um assistente criado para ajudar com d√∫vidas sobre teologia crist√£. Responda de forma clara, amig√°vel e fundamentada nas Escrituras e na tradi√ß√£o crist√£. Fale como algu√©m que entende do assunto e quer de verdade ajudar, sem repetir sua identidade em cada resposta. Ao citar um vers√≠culo, traga o texto completo e explique o contexto: quem escreveu, para quem foi escrito, em que situa√ß√£o e como se aplica √† pergunta. Mantenha as respostas curtas, com linguagem leve e pr√≥xima, e limite de at√© 1600 caracteres. N√£o use formata√ß√£o como negrito, it√°lico ou t√≠tulos. Emojis est√£o liberados pra deixar a conversa mais leve üòä. Pergunta: ${prompt}`
  const API_KEY = process.env.GEMINI_API_KEY

  const response = await fetch(
    `https://generativelanguage.googleapis.com/v1beta/models/gemini-2.0-flash:generateContent?key=${API_KEY}`,
    {
      method: 'POST',
      headers: { 'Content-Type': 'application/json' },
      body: JSON.stringify({
        contents: [{ parts: [{ text: theologicalPrompt }] }],
      }),
    }
  )

  const data = await response.json()
  console.log('Resposta completa da Gemini:', JSON.stringify(data, null, 2))

  const text = data?.candidates?.[0]?.content?.parts?.[0]?.text || 'Sem resposta.'

  // Envia a resposta como texto puro
  return NextResponse.json({ response: text })
}
